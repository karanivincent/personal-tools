{
    "url": "https://microsoft.github.io/autogen/docs/notebooks/agentchat_oai_assistant_function_call",
    "title": "Chat with OpenAI Assistant using function call in AutoGen: OSS Insights for Advanced GitHub Data Analysis",
    "sections": [
        {
            "title": "",
            "content": [
                {
                    "text": "\n\nThis Jupyter Notebook demonstrates how to leverage OSS Insight (Open\nSource Software Insight) for advanced GitHub data analysis by defining\nFunction calls\nin AutoGen for the OpenAI Assistant.\n\nThe notebook is structured into four main sections:"
                }
            ],
            "subsections": []
        },
        {
            "title": "Requirements\n​",
            "content": [
                {
                    "text": "AutoGen requires\nPython>=3.8\n. To run this notebook example, please\ninstall:\n\nInstall\npyautogen\n:"
                },
                {
                    "code": {
                        "language": "bash",
                        "script": "pip install pyautogen"
                    }
                },
                {
                    "text": "For more information, please refer to the\ninstallation guide\n."
                },
                {
                    "code": {
                        "language": "python",
                        "script": "%\n%\ncapture\n-\n-\nno\n-\nstderr\n# %pip install \"pyautogen>=0.2.3\""
                    }
                }
            ],
            "subsections": []
        },
        {
            "title": "Function Schema and Implementation\n​",
            "content": [
                {
                    "text": "This section provides the function schema definition and their\nimplementation details. These functions are tailored to fetch and\nprocess data from GitHub, utilizing OSS Insight’s capabilities."
                },
                {
                    "code": {
                        "language": "python",
                        "script": "import\nlogging\nimport\nos\nfrom\nautogen\nimport\nUserProxyAgent\n,\nconfig_list_from_json\nfrom\nautogen\n.\nagentchat\n.\ncontrib\n.\ngpt_assistant_agent\nimport\nGPTAssistantAgent\nlogger\n=\nlogging\n.\ngetLogger\n(\n__name__\n)\nlogger\n.\nsetLevel\n(\nlogging\n.\nWARNING\n)\nossinsight_api_schema\n=\n{\n\"name\"\n:\n\"ossinsight_data_api\"\n,\n\"parameters\"\n:\n{\n\"type\"\n:\n\"object\"\n,\n\"properties\"\n:\n{\n\"question\"\n:\n{\n\"type\"\n:\n\"string\"\n,\n\"description\"\n:\n(\n\"Enter your GitHub data question in the form of a clear and specific question to ensure the returned data is accurate and valuable. \"\n\"For optimal results, specify the desired format for the data table in your request.\"\n)\n,\n}\n}\n,\n\"required\"\n:\n[\n\"question\"\n]\n,\n}\n,\n\"description\"\n:\n\"This is an API endpoint allowing users (analysts) to input question about GitHub in text format to retrieve the related and structured data.\"\n,\n}\ndef\nget_ossinsight\n(\nquestion\n)\n:\n\"\"\"\n[Mock] Retrieve the top 10 developers with the most followers on GitHub.\n\"\"\"\nreport_components\n=\n[\nf\"Question:\n{\nquestion\n}\n\"\n,\n\"SQL: SELECT `login` AS `user_login`, `followers` AS `followers` FROM `github_users` ORDER BY `followers` DESC LIMIT 10\"\n,\n\"\"\"Results:\n{'followers': 166730, 'user_login': 'torvalds'}\n{'followers': 86239, 'user_login': 'yyx990803'}\n{'followers': 77611, 'user_login': 'gaearon'}\n{'followers': 72668, 'user_login': 'ruanyf'}\n{'followers': 65415, 'user_login': 'JakeWharton'}\n{'followers': 60972, 'user_login': 'peng-zhihui'}\n{'followers': 58172, 'user_login': 'bradtraversy'}\n{'followers': 52143, 'user_login': 'gustavoguanabara'}\n{'followers': 51542, 'user_login': 'sindresorhus'}\n{'followers': 49621, 'user_login': 'tj'}\"\"\"\n,\n]\nreturn\n\"\\n\"\n+\n\"\\n\\n\"\n.\njoin\n(\nreport_components\n)\n+\n\"\\n\""
                    }
                }
            ],
            "subsections": []
        },
        {
            "title": "Defining an OpenAI Assistant Agent in AutoGen\n​",
            "content": [
                {
                    "text": "Here, we explore how to define an OpenAI Assistant Agent within the\nAutoGen. This includes setting up the agent to make use of the\npreviously defined function calls for data retrieval and analysis."
                },
                {
                    "code": {
                        "language": "python",
                        "script": "assistant_id\n=\nos\n.\nenviron\n.\nget\n(\n\"ASSISTANT_ID\"\n,\nNone\n)\nconfig_list\n=\nconfig_list_from_json\n(\n\"OAI_CONFIG_LIST\"\n)\nllm_config\n=\n{\n\"config_list\"\n:\nconfig_list\n,\n}\nassistant_config\n=\n{\n\"assistant_id\"\n:\nassistant_id\n,\n\"tools\"\n:\n[\n{\n\"type\"\n:\n\"function\"\n,\n\"function\"\n:\nossinsight_api_schema\n,\n}\n]\n,\n}\noss_analyst\n=\nGPTAssistantAgent\n(\nname\n=\n\"OSS Analyst\"\n,\ninstructions\n=\n(\n\"Hello, Open Source Project Analyst. You'll conduct comprehensive evaluations of open source projects or organizations on the GitHub platform, \"\n\"analyzing project trajectories, contributor engagements, open source trends, and other vital parameters. \"\n\"Please carefully read the context of the conversation to identify the current analysis question or problem that needs addressing.\"\n)\n,\nllm_config\n=\nllm_config\n,\nassistant_config\n=\nassistant_config\n,\nverbose\n=\nTrue\n,\n)\noss_analyst\n.\nregister_function\n(\nfunction_map\n=\n{\n\"ossinsight_data_api\"\n:\nget_ossinsight\n,\n}\n)"
                    }
                },
                {
                    "code": {
                        "language": "text",
                        "script": "OpenAI client config of GPTAssistantAgent(OSS Analyst) - model: gpt-4-turbo-preview\nGPT Assistant only supports one OpenAI client. Using the first client in the list.\nNo matching assistant found, creating a new assistant"
                    }
                },
                {
                    "text": "Learn more about configuring LLMs for agents\nhere\n."
                }
            ],
            "subsections": []
        },
        {
            "title": "Fetching GitHub Insight Data using Function Call\n​",
            "content": [
                {
                    "text": "This part of the notebook demonstrates the practical application of the\ndefined functions and the OpenAI Assistant Agent in fetching and\ninterpreting GitHub Insight data."
                },
                {
                    "code": {
                        "language": "python",
                        "script": "user_proxy\n=\nUserProxyAgent\n(\nname\n=\n\"user_proxy\"\n,\ncode_execution_config\n=\n{\n\"work_dir\"\n:\n\"coding\"\n,\n\"use_docker\"\n:\nFalse\n,\n}\n,\n# Please set use_docker=True if docker is available to run the generated code. Using docker is safer than running the generated code directly.\nis_termination_msg\n=\nlambda\nmsg\n:\n\"TERMINATE\"\nin\nmsg\n[\n\"content\"\n]\n,\nhuman_input_mode\n=\n\"NEVER\"\n,\nmax_consecutive_auto_reply\n=\n1\n,\n)\nuser_proxy\n.\ninitiate_chat\n(\noss_analyst\n,\nmessage\n=\n\"Top 10 developers with the most followers\"\n)\noss_analyst\n.\ndelete_assistant\n(\n)"
                    }
                },
                {
                    "code": {
                        "language": "text",
                        "script": "user_proxy (to OSS Analyst):\nTop 10 developers with the most followers\n--------------------------------------------------------------------------------\n>>>>>>>> EXECUTING FUNCTION ossinsight_data_api...\nInput arguments: {'question': 'Top 10 developers with the most followers'}\nOutput:\nQuestion: Top 10 developers with the most followers\nSQL: SELECT `login` AS `user_login`, `followers` AS `followers` FROM `github_users` ORDER BY `followers` DESC LIMIT 10\nResults:\n{'followers': 166730, 'user_login': 'torvalds'}\n{'followers': 86239, 'user_login': 'yyx990803'}\n{'followers': 77611, 'user_login': 'gaearon'}\n{'followers': 72668, 'user_login': 'ruanyf'}\n{'followers': 65415, 'user_login': 'JakeWharton'}\n{'followers': 60972, 'user_login': 'peng-zhihui'}\n{'followers': 58172, 'user_login': 'bradtraversy'}\n{'followers': 52143, 'user_login': 'gustavoguanabara'}\n{'followers': 51542, 'user_login': 'sindresorhus'}\n{'followers': 49621, 'user_login': 'tj'}\nOSS\nAnalyst\n(\nto\nuser_proxy\n)\n:\nThe top 10 developers with the most followers on GitHub are:\n1. **Linus Torvalds** (`torvalds`) with 166,730 followers\n2. **Evan You** (`yyx990803`) with 86,239 followers\n3. **Dan Abramov** (`gaearon`) with 77,611 followers\n4. **Ruan YiFeng** (`ruanyf`) with 72,668 followers\n5. **Jake Wharton** (`JakeWharton`) with 65,415 followers\n6. **Peng Zhihui** (`peng-zhihui`) with 60,972 followers\n7. **Brad Traversy** (`bradtraversy`) with 58,172 followers\n8. **Gustavo Guanabara** (`gustavoguanabara`) with 52,143 followers\n9. **Sindre Sorhus** (`sindresorhus`) with 51,542 followers\n10. **TJ Holowaychuk** (`tj`) with 49,621 followers\n--------------------------------------------------------------------------------\nuser_proxy (to OSS Analyst):\n--------------------------------------------------------------------------------\nOSS\nAnalyst\n(\nto\nuser_proxy\n)\n:\nIt looks like there is no question or prompt for me to respond to. Could you please provide more details or ask a question that you would like assistance with?\n--------------------------------------------------------------------------------"
                    }
                },
                {
                    "code": {
                        "language": "text",
                        "script": "Permanently deleting assistant..."
                    }
                }
            ],
            "subsections": []
        }
    ],
    "images": []
}