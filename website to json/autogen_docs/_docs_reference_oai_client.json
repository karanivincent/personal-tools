{
    "url": "https://microsoft.github.io/autogen/docs/reference/oai/client",
    "title": "oai.client",
    "sections": [
        {
            "title": "ModelClient\n​",
            "content": [
                {
                    "code": {
                        "language": "python",
                        "script": "class\nModelClient\n(\nProtocol\n)"
                    }
                },
                {
                    "text": "A client class must implement the following methods:\n\nThis class is used to create a client that can be used by OpenAIWrapper.\nThe response returned from create must adhere to the ModelClientResponseProtocol but can be extended however needed.\nThe message_retrieval method must be implemented to return a list of str or a list of messages from the response."
                }
            ],
            "subsections": [
                {
                    "title": "message_retrieval\n​",
                    "content": [
                        {
                            "code": {
                                "language": "python",
                                "script": "def\nmessage_retrieval\n(\nresponse\n:\nModelClientResponseProtocol\n)\n-\n>\nUnion\n[\nList\n[\nstr\n]\n,\nList\n[\nModelClient\n.\nModelClientResponseProtocol\n.\nChoice\n.\nMessage\n]\n]"
                            }
                        },
                        {
                            "text": "Retrieve and return a list of strings or a list of Choice.Message from the response.\n\nNOTE: if a list of Choice.Message is returned, it currently needs to contain the fields of OpenAI's ChatCompletion Message object,\nsince that is expected for function or tool calling in the rest of the codebase at the moment, unless a custom agent is being used."
                        }
                    ],
                    "subsections": []
                }
            ]
        },
        {
            "title": "OpenAIClient\n​",
            "content": [
                {
                    "code": {
                        "language": "python",
                        "script": "class\nOpenAIClient\n(\n)"
                    }
                },
                {
                    "text": "Follows the Client protocol and wraps the OpenAI client."
                }
            ],
            "subsections": [
                {
                    "title": "message_retrieval\n​",
                    "content": [
                        {
                            "code": {
                                "language": "python",
                                "script": "def\nmessage_retrieval\n(\nresponse\n:\nUnion\n[\nChatCompletion\n,\nCompletion\n]\n)\n-\n>\nUnion\n[\nList\n[\nstr\n]\n,\nList\n[\nChatCompletionMessage\n]\n]"
                            }
                        },
                        {
                            "text": "Retrieve the messages from the response."
                        }
                    ],
                    "subsections": []
                },
                {
                    "title": "create\n​",
                    "content": [
                        {
                            "code": {
                                "language": "python",
                                "script": "def\ncreate\n(\nparams\n:\nDict\n[\nstr\n,\nAny\n]\n)\n-\n>\nChatCompletion"
                            }
                        },
                        {
                            "text": "Create a completion for a given config using openai's client.\n\nArguments\n:\n\nReturns\n:\n\nThe completion."
                        }
                    ],
                    "subsections": []
                }
            ]
        },
        {
            "title": "OpenAIWrapper\n​",
            "content": [
                {
                    "code": {
                        "language": "python",
                        "script": "class\nOpenAIWrapper\n(\n)"
                    }
                },
                {
                    "text": "A wrapper class for openai client."
                }
            ],
            "subsections": [
                {
                    "title": "__init__\n​",
                    "content": [
                        {
                            "code": {
                                "language": "python",
                                "script": "def\n__init__\n(\n*\n,\nconfig_list\n:\nOptional\n[\nList\n[\nDict\n[\nstr\n,\nAny\n]\n]\n]\n=\nNone\n,\n**\nbase_config\n:\nAny\n)"
                            }
                        },
                        {
                            "text": "Arguments\n:"
                        },
                        {
                            "code": {
                                "language": "python",
                                "script": "config_list\n=\n[\n{\n\"model\"\n:\n\"gpt-4\"\n,\n\"api_key\"\n:\nos\n.\nenviron\n.\nget\n(\n\"AZURE_OPENAI_API_KEY\"\n)\n,\n\"api_type\"\n:\n\"azure\"\n,\n\"base_url\"\n:\nos\n.\nenviron\n.\nget\n(\n\"AZURE_OPENAI_API_BASE\"\n)\n,\n\"api_version\"\n:\n\"2024-02-15-preview\"\n,\n}\n,\n{\n\"model\"\n:\n\"gpt-3.5-turbo\"\n,\n\"api_key\"\n:\nos\n.\nenviron\n.\nget\n(\n\"OPENAI_API_KEY\"\n)\n,\n\"api_type\"\n:\n\"openai\"\n,\n\"base_url\"\n:\n\"https://api.openai.com/v1\"\n,\n}\n,\n{\n\"model\"\n:\n\"llama-7B\"\n,\n\"base_url\"\n:\n\"http://127.0.0.1:8080\"\n,\n}\n]"
                            }
                        }
                    ],
                    "subsections": []
                },
                {
                    "title": "register_model_client\n​",
                    "content": [
                        {
                            "code": {
                                "language": "python",
                                "script": "def\nregister_model_client\n(\nmodel_client_cls\n:\nModelClient\n,\n**\nkwargs\n)"
                            }
                        },
                        {
                            "text": "Register a model client.\n\nArguments\n:"
                        }
                    ],
                    "subsections": []
                },
                {
                    "title": "create\n​",
                    "content": [
                        {
                            "code": {
                                "language": "python",
                                "script": "def\ncreate\n(\n**\nconfig\n:\nAny\n)\n-\n>\nModelClient\n.\nModelClientResponseProtocol"
                            }
                        },
                        {
                            "text": "Make a completion for a given config using available clients.\nBesides the kwargs allowed in openai's [or other] client, we allow the following additional kwargs.\nThe config in each client will be overridden by the config.\n\nArguments\n:"
                        },
                        {
                            "code": {
                                "language": "python",
                                "script": "def\nyes_or_no_filter\n(\ncontext\n,\nresponse\n)\n:\nreturn\ncontext\n.\nget\n(\n\"yes_or_no_choice\"\n,\nFalse\n)\nis\nFalse\nor\nany\n(\ntext\nin\n[\n\"Yes.\"\n,\n\"No.\"\n]\nfor\ntext\nin\nclient\n.\nextract_text_or_completion_object\n(\nresponse\n)\n)"
                            }
                        },
                        {
                            "text": "Raises\n:"
                        }
                    ],
                    "subsections": []
                },
                {
                    "title": "print_usage_summary\n​",
                    "content": [
                        {
                            "code": {
                                "language": "python",
                                "script": "def\nprint_usage_summary\n(\nmode\n:\nUnion\n[\nstr\n,\nList\n[\nstr\n]\n]\n=\n[\n\"actual\"\n,\n\"total\"\n]\n)\n-\n>\nNone"
                            }
                        },
                        {
                            "text": "Print the usage summary."
                        }
                    ],
                    "subsections": []
                },
                {
                    "title": "clear_usage_summary\n​",
                    "content": [
                        {
                            "code": {
                                "language": "python",
                                "script": "def\nclear_usage_summary\n(\n)\n-\n>\nNone"
                            }
                        },
                        {
                            "text": "Clear the usage summary."
                        }
                    ],
                    "subsections": []
                },
                {
                    "title": "extract_text_or_completion_object\n​",
                    "content": [
                        {
                            "code": {
                                "language": "python",
                                "script": "@classmethod\ndef\nextract_text_or_completion_object\n(\ncls\n,\nresponse\n:\nModelClient\n.\nModelClientResponseProtocol\n)\n-\n>\nUnion\n[\nList\n[\nstr\n]\n,\nList\n[\nModelClient\n.\nModelClientResponseProtocol\n.\nChoice\n.\nMessage\n]\n]"
                            }
                        },
                        {
                            "text": "Extract the text or ChatCompletion objects from a completion or chat response.\n\nArguments\n:\n\nReturns\n:\n\nA list of text, or a list of ChatCompletion objects if function_call/tool_calls are present."
                        }
                    ],
                    "subsections": []
                }
            ]
        }
    ],
    "images": []
}